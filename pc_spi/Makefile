#############################################################################
# Makefile for building: pc_spi
# Generated by qmake (3.0) (Qt 5.3.1)
# Project:  pc_spi.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile pc_spi.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -pthread -O2 -Wall -W -fPIE $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -fPIE $(DEFINES)

LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/opt/Qt5.3.1/5.3/gcc
LIBS          = $(SUBLIBS) -pthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.c \
		spi_par.c \
		getchar.c \
		timefn.c 
OBJECTS       = main.o \
		spi_par.o \
		getchar.o \
		timefn.o

QMAKE_TARGET  = pc_spi
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = pc_spi


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)



clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core

####### Compile

main.o: main.c bits.h \
		getchar.h \
		spi_par.h \
		cbool.h \
		timefn.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o main.o main.c

spi_par.o: spi_par.c spi_par.h \
		bits.h \
		cbool.h \
		timefn.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o spi_par.o spi_par.c

getchar.o: getchar.c getchar.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o getchar.o getchar.c

timefn.o: timefn.c timefn.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o timefn.o timefn.c


